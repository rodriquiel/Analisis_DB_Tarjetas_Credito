# -*- coding: utf-8 -*-
"""AnalisisDBconTarjetasCredito.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lpNnT_IOfLl3Dseiyj4MU0E6FnG0so9P

#Importando base de datos
"""

import pandas as pd

datos = pd.read_csv("credit_card.csv")
datos.head(15)

"""###Se considerará no morosas aquellas personas que pagaron algún valor de la factura.

##Informacion general de la base de datos
"""

datos.info()

"""###No se observan NaN en ninguna de las columnas, lo que facilita el tratamiento de los datos

#Traduccion de variables y columnas

##Columnas
"""

datos.columns

dic_col = {
    'LIMIT_BAL': 'limite',
    'CHECKING_ACCOUNT': 'cuenta_corriente',
    'EDUCATION': 'escolaridad', 
    'MARRIAGE': 'estado_civil', 
    'AGE': 'edad',
    'BILL_AMT': 'valor_factura', 
    'PAY_AMT': 'valor_pago', 
    'DEFAULT': 'moroso'
}

tarjetas = datos.rename(columns = dic_col)

tarjetas.head(15)

"""##Variables"""

tarjetas.cuenta_corriente.unique() #Devuleve valores unicos

dic_cc = {
    'Yes': 'Si', 
    'No': 'No'
}

tarjetas.cuenta_corriente = tarjetas.cuenta_corriente.map(dic_cc)

tarjetas.head(15)

tarjetas.escolaridad.unique()

dic_escol = {
    '2.University': '2.Universidad', 
    '3.Graduate School': '3.Pos-graduacion', 
    '1.High School': '1.Colegio'
}

tarjetas.escolaridad = tarjetas.escolaridad.map(dic_escol)

tarjetas.head(15)

tarjetas.estado_civil.unique()

dic_ec = {
    'Married': 'Casado/a', 
    'Single': 'Soltero/a'
}

tarjetas.estado_civil = tarjetas.estado_civil.map(dic_ec)

tarjetas.head(15)

"""#Uso biblioteca Seaborn

##Biblioteca basica para analisis graficos a partir de DataFrames provenientes de Pandas
"""

!pip install seaborn #Para instalar Seaborn (se instalan tambien Pandas y matplotlib)

import seaborn as sns

!pip show seaborn #Muestra version instalada

tarjetas.shape

tarjetas.head(15)

"""##Analisis 1: Grafico de distribucion sobre 'limite'"""

sns.set_style('darkgrid')

sns.displot(data = tarjetas, x = 'limite', color = 'darkblue');

"""###Grafico de distribucion de 'limite' en base a 'escolaridad'"""

sns.displot(data = tarjetas, x = 'limite', hue = 'escolaridad', palette = 'plasma_r');

sns.displot(data = tarjetas, x = 'limite', col = 'escolaridad');

"""#Analisis 2: Analisis sobre uso del limite disponible en la tarjeta

##Se realiza en base a 'limite' y a 'valor_factura', se usa el concepto de 'indice de uso' (iu)
"""

tarjetas['iu'] = tarjetas['valor_factura']/tarjetas['limite']

tarjetas.head(15)

"""###Grafico de distribucion sobre 'iu' para observar tendencias sobre el uso del limite de la tarjeta. Se observa que la mayoria se concentra cerca del 5%, y se observan picos cerca de 10% y 100%"""

sns.displot(data = tarjetas, x = 'iu', color= 'green')

"""#Analisis 3: Analisis de variables categoricas

Variable categorica: hace refenecia a la pertenencia a una categoria ('estado_civil', 'escolaridad', cuenta_corriente)

##Analisis sobre cantidad de personas con cuenta corriente y los morosos dentro de cada categoria

###Al ver el grafico, la cantidad de moroso es practicamente igual en ambas categorias pero representa un mayor porcentaje en el caso de las personas sin cuenta corriente
"""

sns.countplot(data = tarjetas, x = 'cuenta_corriente', hue = 'moroso', palette='inferno_r');

"""##Analisis relacion entre limite y estado civil

###En este caso, analizando el grafico de dispersion generado, no se observa una diferencia relevante entre el limite y el estado civil
"""

sns.catplot(data = tarjetas, x = 'estado_civil', y ='limite', palette='inferno_r');

"""###Se realiza el mismo analisis pero teniendo en cuenta tambien la condicion de moroso, y se observan algunas diferencias: en el caso de los solteros la dispersion se concentra sobre la base del grafico. Tambien puede decirse que las personas morosas tienen mas limite siendo casados que solteros"""

sns.catplot(data = tarjetas, x = 'estado_civil', y ='limite', hue = 'moroso', dodge=True, palette='inferno_r');

"""##Analisis sobre el uso de limite de la tarjeta en base al nivel de escolaridad

###Para el caso de universitarios, la dispersion se observa equitativa, mientras que para los otros dos casos se observa, cada una en su medida, una mayor concentracion en los extremos del valor del iu
"""

sns.swarmplot(data = tarjetas, x = 'escolaridad', y = 'iu')

sns.violinplot(data = tarjetas, x = 'escolaridad', y = 'iu');

"""##Otro grafico del mismo planteo (box-plot)

###En este caso, se puede observar que a medida que aumenta el nivel de escolaridad, disminuye la media del iu
"""

sns.boxplot(data = tarjetas, x = 'escolaridad', y = 'iu')

"""##Creacion columna categorica de rangos de edad para analisis sobre la misma"""

bins = [20,30,40,50,100]
nombres = ['20-30','30-40','40-50','+50']
tarjetas['rango_edad'] = pd.cut(tarjetas['edad'], bins, labels = nombres)

tarjetas.head(15)

"""#Se analiza si las personas pertenecientes a rangos etarios mayores poseen mayor limite en sus tarjetas

###En el grafico de caja se observa que el rango etario con mayor limite en base al analisis es el de 30-40, mientras que los que cuentan con menor limite son de 20-30, lo cual tiene sentido ya que mayormente se trata de gente que esta insertandose en el ambito laboral. Se pueden observar tambien algunos outliers en todos los rangos etarios.
"""

sns.boxplot(data = tarjetas, x ='rango_edad', y = 'limite');

"""#Analisis 4: Analisis de variables numericas y regresion

###Grafico de funcion de densidad de 'limite' en base a 'escolaridad'
"""

sns.displot(data = tarjetas, x = 'limite', col = 'escolaridad', kind = 'kde');

"""###Se agrega el analisis de morosidad"""

sns.displot(data = tarjetas, x = 'limite', col = 'escolaridad', kind = 'kde', hue = 'moroso');

"""###Ahora segun rango de edad"""

sns.displot(data = tarjetas, x = 'limite', col = 'escolaridad', kind = 'kde', hue = 'rango_edad');

"""##Grafico de dispersion de relacion entre valor de factura e indice de uso (iu)"""

sns.scatterplot(data = tarjetas, x = 'iu', y = 'valor_factura');

"""##Se le agrega al analisis la variable de cuenta corriente"""

sns.scatterplot(data = tarjetas, x = 'iu', y = 'valor_factura', hue = 'cuenta_corriente');

"""##En el siguente grafico, se puede observar la linea de tendencia, la cual muestra que las columnas analizadas son directamente proporcionales"""

sns.lmplot(data = tarjetas, x = 'iu', y = 'valor_factura');

"""##Test de hipotesis

###Se parte desde agregar al analisis la condicion de moroso, viendo dos lineas de tendencia directamente proporcionales pero con diferente inclinacion, por lo que se busca saber si dicha diferenciaa es estadisticamente significativa
"""

sns.lmplot(data = tarjetas, x = 'iu', y = 'valor_factura', col = 'moroso');

from scipy.stats import ranksums

"""###Planteo de hipotesis

H<sup>0<sup>

La distribucion de los grupos moroso y no moroso es la misma

H<sup>1<sup>

La distribucion de los grupos moroso y no moroso es distinta
"""

moroso = tarjetas.query("moroso == 1").valor_factura

moroso

no_moroso = tarjetas.query("moroso == 0").valor_factura

no_moroso

"""###Al obtener un pvalue por debajo del 0.05 (5%) se puede aceptar la hipotesis alternativa como cierta para el caso planteado"""

ranksums(moroso,no_moroso)

resultado = ranksums(moroso,no_moroso)

print("El p_value del test realiado es {}".format(resultado.pvalue.round(5)))

"""#Analisis 4: Analisis conjunto de variables

##Relacion entre 'edad' y 'limite' mediante grafico de dispersion

###Los siguietes graficos permiten visualizar al mismo tiempo como es la distribución individual de una variable y cómo se relaciona con otra variable con la que se desea hacer comparaciones

###Se puede observar la concentracion en distintos valores de limite en base a la edad de los individuos
"""

sns.jointplot(data = tarjetas, x = 'edad', y = 'limite');

"""###Mismo resultado desde una visual distinta"""

sns.jointplot(data = tarjetas, x = 'edad', y = 'limite', kind = 'kde', color = 'green');

sns.jointplot(data = tarjetas, x = 'edad', y = 'limite', kind = 'hex', color = 'orange');

"""##Ahora, se supone el caso en el cual no se conocen los datos de la base y se quiere realizar un analisis rapido para tener una primera impresion de los datos con los cuales se va a trabajar

###Algunos datos estadisticos sobre las columnas con tipo de dato numerico
"""

tarjetas.describe()

"""###Vista visual de los datos estadisticos, se puede observar las relaciones entre las distintas variables, y el histograma de cada variable"""

sns.pairplot(data = tarjetas);

"""###Se puede aplicar alguna de las variables categoricas para realizar el mismo tipo de analisis. En este caso, se selecciona escolaridad"""

sns.pairplot(data = tarjetas, hue = 'escolaridad', palette='inferno_r');